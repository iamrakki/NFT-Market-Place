{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format, isNullish, keccak256 } from 'web3-utils';\nimport { FMT_NUMBER, FMT_BYTES, DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { decodeLog, decodeParameters, encodeEventSignature, encodeFunctionSignature, encodeParameter, encodeParameters, isAbiConstructorFragment, jsonInterfaceMethodToString } from 'web3-eth-abi';\nimport { blockSchema, logSchema } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\nexport const encodeEventABI = (_ref, event, options) => {\n  let {\n    address\n  } = _ref;\n  var _a, _b;\n  const topics = options === null || options === void 0 ? void 0 : options.topics;\n  const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n  const opts = {};\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.fromBlock)) {\n    opts.fromBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.toBlock)) {\n    opts.toBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n  if (topics && Array.isArray(topics)) {\n    opts.topics = [...topics];\n  } else {\n    opts.topics = [];\n    // add event signature\n    if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n      opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : encodeEventSignature(jsonInterfaceMethodToString(event)));\n    }\n    // add event topics (indexed arguments)\n    if (event.name !== 'ALLEVENTS' && event.inputs) {\n      for (const input of event.inputs) {\n        if (!input.indexed) {\n          continue;\n        }\n        const value = filter[input.name];\n        if (!value) {\n          // eslint-disable-next-line no-null/no-null\n          opts.topics.push(null);\n          continue;\n        }\n        // TODO: https://github.com/ethereum/web3.js/issues/344\n        // TODO: deal properly with components\n        if (Array.isArray(value)) {\n          opts.topics.push(value.map(v => encodeParameter(input.type, v)));\n        } else if (input.type === 'string') {\n          opts.topics.push(keccak256(value));\n        } else {\n          opts.topics.push(encodeParameter(input.type, value));\n        }\n      }\n    }\n  }\n  if (!opts.topics.length) delete opts.topics;\n  if (address) {\n    opts.address = address.toLowerCase();\n  }\n  return opts;\n};\nexport const decodeEventABI = function (event, data, jsonInterface) {\n  let returnFormat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_RETURN_FORMAT;\n  var _a, _b, _c, _d, _e;\n  let modifiedEvent = Object.assign({}, event);\n  const result = format(logSchema, data, returnFormat);\n  // if allEvents get the right event\n  if (modifiedEvent.name === 'ALLEVENTS') {\n    const matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);\n    if (matchedEvent) {\n      modifiedEvent = matchedEvent;\n    } else {\n      modifiedEvent = {\n        anonymous: true\n      };\n    }\n  }\n  // create empty inputs if none are present (e.g. anonymous events on allEvents)\n  modifiedEvent.inputs = (_b = (_a = modifiedEvent.inputs) !== null && _a !== void 0 ? _a : event.inputs) !== null && _b !== void 0 ? _b : [];\n  // Handle case where an event signature shadows the current ABI with non-identical\n  // arg indexing. If # of topics doesn't match, event is anon.\n  if (!modifiedEvent.anonymous) {\n    let indexedInputs = 0;\n    ((_c = modifiedEvent.inputs) !== null && _c !== void 0 ? _c : []).forEach(input => {\n      if (input.indexed) {\n        indexedInputs += 1;\n      }\n    });\n    if (indexedInputs > 0 && (data === null || data === void 0 ? void 0 : data.topics) && (data === null || data === void 0 ? void 0 : data.topics.length) !== indexedInputs + 1) {\n      // checks if event is anonymous\n      modifiedEvent = Object.assign(Object.assign({}, modifiedEvent), {\n        anonymous: true,\n        inputs: []\n      });\n    }\n  }\n  const argTopics = modifiedEvent.anonymous ? data.topics : ((_d = data.topics) !== null && _d !== void 0 ? _d : []).slice(1);\n  return Object.assign(Object.assign({}, result), {\n    returnValues: decodeLog([...((_e = modifiedEvent.inputs) !== null && _e !== void 0 ? _e : [])], data.data, argTopics),\n    event: modifiedEvent.name,\n    signature: modifiedEvent.anonymous || !data.topics || data.topics.length === 0 || !data.topics[0] ? undefined : data.topics[0],\n    raw: {\n      data: data.data,\n      topics: data.topics\n    }\n  });\n};\nexport const encodeMethodABI = (abi, args, deployData) => {\n  const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n  if (inputLength !== args.length) {\n    throw new Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`);\n  }\n  const params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');\n  if (isAbiConstructorFragment(abi)) {\n    if (!deployData) throw new Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n    if (!deployData.startsWith('0x')) {\n      return `0x${deployData}${params}`;\n    }\n    return `${deployData}${params}`;\n  }\n  return `${encodeFunctionSignature(abi)}${params}`;\n};\nexport const decodeMethodReturn = (abi, returnValues) => {\n  // If it was constructor then we need to return contract address\n  if (abi.type === 'constructor') {\n    return returnValues;\n  }\n  if (!returnValues) {\n    // Using \"null\" value intentionally to match legacy behavior\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  const value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n  if (!abi.outputs) {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n  const result = decodeParameters([...abi.outputs], value);\n  if (result.__length__ === 1) {\n    return result[0];\n  }\n  return result;\n};","map":{"version":3,"mappings":"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","names":["format","isNullish","keccak256","FMT_NUMBER","FMT_BYTES","DEFAULT_RETURN_FORMAT","decodeLog","decodeParameters","encodeEventSignature","encodeFunctionSignature","encodeParameter","encodeParameters","isAbiConstructorFragment","jsonInterfaceMethodToString","blockSchema","logSchema","Web3ContractError","encodeEventABI","event","options","address","topics","filter","opts","fromBlock","properties","number","HEX","bytes","toBlock","Array","isArray","anonymous","name","push","signature","inputs","input","indexed","value","map","v","type","length","toLowerCase","decodeEventABI","data","jsonInterface","returnFormat","modifiedEvent","result","matchedEvent","find","j","indexedInputs","forEach","argTopics","slice","returnValues","undefined","raw","encodeMethodABI","abi","args","deployData","inputLength","params","replace","startsWith","decodeMethodReturn","outputs","__length__"],"sources":["C:\\Users\\rockr\\Desktop\\NFT-MARKETPLACE\\node_modules\\web3-eth-contract\\src\\encoding.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, isNullish, keccak256 } from 'web3-utils';\n\nimport {\n\tAbiConstructorFragment,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tLogsInput,\n\tFilter,\n\tHexString,\n\tTopic,\n\tFMT_NUMBER,\n\tFMT_BYTES,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n} from 'web3-types';\n\nimport {\n\tdecodeLog,\n\tdecodeParameters,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tisAbiConstructorFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\n\nimport { blockSchema, logSchema } from 'web3-eth';\n\nimport { Web3ContractError } from 'web3-errors';\n\n// eslint-disable-next-line import/no-cycle\nimport { ContractOptions, ContractAbiWithSignature, EventLog } from './types.js';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nexport const encodeEventABI = (\n\t{ address }: ContractOptions,\n\tevent: AbiEventFragment & { signature: string },\n\toptions?: Filter,\n) => {\n\tconst topics = options?.topics;\n\tconst filter = options?.filter ?? {};\n\tconst opts: Writeable<Filter> = {};\n\n\tif (!isNullish(options?.fromBlock)) {\n\t\topts.fromBlock = format(blockSchema.properties.number, options?.fromBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\tif (!isNullish(options?.toBlock)) {\n\t\topts.toBlock = format(blockSchema.properties.number, options?.toBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\n\tif (topics && Array.isArray(topics)) {\n\t\topts.topics = [...topics] as Topic[];\n\t} else {\n\t\topts.topics = [];\n\t\t// add event signature\n\t\tif (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n\t\t\topts.topics.push(\n\t\t\t\tevent.signature ?? encodeEventSignature(jsonInterfaceMethodToString(event)),\n\t\t\t);\n\t\t}\n\n\t\t// add event topics (indexed arguments)\n\t\tif (event.name !== 'ALLEVENTS' && event.inputs) {\n\t\t\tfor (const input of event.inputs) {\n\t\t\t\tif (!input.indexed) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst value = filter[input.name];\n\t\t\t\tif (!value) {\n\t\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t\topts.topics.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: https://github.com/ethereum/web3.js/issues/344\n\t\t\t\t// TODO: deal properly with components\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\topts.topics.push(value.map(v => encodeParameter(input.type, v)));\n\t\t\t\t} else if (input.type === 'string') {\n\t\t\t\t\topts.topics.push(keccak256(value as string));\n\t\t\t\t} else {\n\t\t\t\t\topts.topics.push(encodeParameter(input.type, value));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!opts.topics.length) delete opts.topics;\n\n\tif (address) {\n\t\topts.address = address.toLowerCase();\n\t}\n\n\treturn opts;\n};\n\nexport const decodeEventABI = (\n\tevent: AbiEventFragment & { signature: string },\n\tdata: LogsInput,\n\tjsonInterface: ContractAbiWithSignature,\n\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n): EventLog => {\n\tlet modifiedEvent = { ...event };\n\n\tconst result = format(logSchema, data, returnFormat);\n\n\t// if allEvents get the right event\n\tif (modifiedEvent.name === 'ALLEVENTS') {\n\t\tconst matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);\n\t\tif (matchedEvent) {\n\t\t\tmodifiedEvent = matchedEvent as AbiEventFragment & { signature: string };\n\t\t} else {\n\t\t\tmodifiedEvent = { anonymous: true } as unknown as AbiEventFragment & {\n\t\t\t\tsignature: string;\n\t\t\t};\n\t\t}\n\t}\n\n\t// create empty inputs if none are present (e.g. anonymous events on allEvents)\n\tmodifiedEvent.inputs = modifiedEvent.inputs ?? event.inputs ?? [];\n\n\t// Handle case where an event signature shadows the current ABI with non-identical\n\t// arg indexing. If # of topics doesn't match, event is anon.\n\tif (!modifiedEvent.anonymous) {\n\t\tlet indexedInputs = 0;\n\t\t(modifiedEvent.inputs ?? []).forEach(input => {\n\t\t\tif (input.indexed) {\n\t\t\t\tindexedInputs += 1;\n\t\t\t}\n\t\t});\n\n\t\tif (indexedInputs > 0 && data?.topics && data?.topics.length !== indexedInputs + 1) {\n\t\t\t// checks if event is anonymous\n\t\t\tmodifiedEvent = {\n\t\t\t\t...modifiedEvent,\n\t\t\t\tanonymous: true,\n\t\t\t\tinputs: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tconst argTopics = modifiedEvent.anonymous ? data.topics : (data.topics ?? []).slice(1);\n\treturn {\n\t\t...result,\n\t\treturnValues: decodeLog([...(modifiedEvent.inputs ?? [])], data.data, argTopics),\n\t\tevent: modifiedEvent.name,\n\t\tsignature:\n\t\t\tmodifiedEvent.anonymous || !data.topics || data.topics.length === 0 || !data.topics[0]\n\t\t\t\t? undefined\n\t\t\t\t: data.topics[0],\n\n\t\traw: {\n\t\t\tdata: data.data,\n\t\t\ttopics: data.topics,\n\t\t},\n\t};\n};\n\nexport const encodeMethodABI = (\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\targs: unknown[],\n\tdeployData?: HexString,\n) => {\n\tconst inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\n\tif (inputLength !== args.length) {\n\t\tthrow new Web3ContractError(\n\t\t\t`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`,\n\t\t);\n\t}\n\n\tconst params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace(\n\t\t'0x',\n\t\t'',\n\t);\n\n\tif (isAbiConstructorFragment(abi)) {\n\t\tif (!deployData)\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n\t\t\t);\n\n\t\tif (!deployData.startsWith('0x')) {\n\t\t\treturn `0x${deployData}${params}`;\n\t\t}\n\n\t\treturn `${deployData}${params}`;\n\t}\n\n\treturn `${encodeFunctionSignature(abi)}${params}`;\n};\n\nexport const decodeMethodReturn = (abi: AbiFunctionFragment, returnValues?: HexString) => {\n\t// If it was constructor then we need to return contract address\n\tif (abi.type === 'constructor') {\n\t\treturn returnValues;\n\t}\n\n\tif (!returnValues) {\n\t\t// Using \"null\" value intentionally to match legacy behavior\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\tconst value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\tif (!abi.outputs) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tconst result = decodeParameters([...abi.outputs], value);\n\n\tif (result.__length__ === 1) {\n\t\treturn result[0];\n\t}\n\n\treturn result;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}