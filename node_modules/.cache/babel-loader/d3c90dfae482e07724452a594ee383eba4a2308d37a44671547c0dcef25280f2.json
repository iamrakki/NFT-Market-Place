{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rockr\\\\Desktop\\\\NFT-MARKETPLACE\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile(props) {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n    let contract = props.contract;\n    let transaction = await contract.getMyNFTs();\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios(tokenURI, {\n        method: 'GET',\n        // Sending a POST request\n        mode: 'cors'\n      });\n      meta = meta.data;\n      let image = getIPFSGatewayURL(meta.image);\n      console.log(\"image url: \" + image);\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      console.log(\"price\", Number(price));\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: image,\n        name: meta.name,\n        description: meta.description\n      };\n      sumPrice += Number(price);\n      return item;\n    }));\n    console.log(\"sum\", sumPrice);\n    updateData(items);\n    updateFetched(true);\n    updateAddress(props.account);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  const getIPFSGatewayURL = ipfsURL => {\n    let urlArray = ipfsURL.split(\"/\");\n    let ipfsGateWayURL = `https://${urlArray[2]}.ipfs.dweb.link/${urlArray[3]}`;\n    return ipfsGateWayURL;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white text-center  mb-5 fw-semibold fs-3\",\n      children: [\"Wallet Address\", /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-white text-center  mb-5 fw-normal fs-4\",\n        children: props.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-center  mb-5 fw-semibold fs-3\",\n            children: [\"No. of NFTs\", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white text-center  mb-5 fw-normal fs-4\",\n              children: data.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-center  mb-5 fw-semibold fs-3\",\n            children: [\"Total Value\", /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white text-center  mb-5 fw-normal fs-4\",\n              children: [totalPrice, \" MATIC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white text-center  mb-5 fw-semibold fs-5\",\n      children: \"Your NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row row-cols-1 row-cols-md-4 g-4 mx-5 text-center\",\n      children: data.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(NFTTile, {\n          data: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white text-center  mb-5 fw-normal fs-5\",\n      children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"2EsCq+A3YKmNbGfcrpDlqLJtmds=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\n;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useParams","axios","useState","NFTTile","Profile","props","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","contract","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","meta","method","mode","image","getIPFSGatewayURL","console","log","price","utils","formatUnits","toString","Number","item","toNumber","seller","owner","name","description","account","toPrecision","params","ipfsURL","urlArray","split","ipfsGateWayURL","length","value","index"],"sources":["C:/Users/rockr/Desktop/NFT-MARKETPLACE/src/components/Profile.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile(props) {\r\n    const [data, updateData] = useState([]);\r\n    const [dataFetched, updateFetched] = useState(false);\r\n    const [address, updateAddress] = useState(\"0x\");\r\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n    async function getNFTData(tokenId) {\r\n        const ethers = require(\"ethers\");\r\n        let sumPrice = 0;\r\n        let contract = props.contract;\r\n        let transaction = await contract.getMyNFTs();\r\n\r\n        const items = await Promise.all(transaction.map(async i => {\r\n            const tokenURI = await contract.tokenURI(i.tokenId);\r\n\r\n            let meta = await axios(tokenURI, {\r\n                method: 'GET',  // Sending a POST request\r\n                mode: 'cors'\r\n            });\r\n\r\n            meta = meta.data;\r\n            let image = getIPFSGatewayURL(meta.image);\r\n            console.log(\"image url: \" + image);\r\n\r\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\r\n            console.log(\"price\", Number(price))\r\n            let item = {\r\n                price,\r\n                tokenId: i.tokenId.toNumber(),\r\n                seller: i.seller,\r\n                owner: i.owner,\r\n                image: image,\r\n                name: meta.name,\r\n                description: meta.description,\r\n            }\r\n            sumPrice += Number(price);\r\n            return item;\r\n        }))\r\n        console.log(\"sum\", sumPrice)\r\n        updateData(items);\r\n        updateFetched(true);\r\n        updateAddress(props.account);\r\n        updateTotalPrice(sumPrice.toPrecision(3));\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    if (!dataFetched)\r\n        getNFTData(tokenId);\r\n\r\n    const getIPFSGatewayURL = (ipfsURL) => {\r\n        let urlArray = ipfsURL.split(\"/\");\r\n        let ipfsGateWayURL = `https://${urlArray[2]}.ipfs.dweb.link/${urlArray[3]}`;\r\n        return ipfsGateWayURL;\r\n    }\r\n    return (\r\n        <div className='profile'>\r\n\r\n            <div className=\"text-white text-center  mb-5 fw-semibold fs-3\">\r\n                Wallet Address\r\n                <h3 className=\"text-white text-center  mb-5 fw-normal fs-4\">{props.account}</h3>\r\n            </div>\r\n            <div class=\"container text-center\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div className=\"text-white text-center  mb-5 fw-semibold fs-3\">\r\n                            No. of NFTs\r\n                            <h3 className=\"text-white text-center  mb-5 fw-normal fs-4\">{data.length}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div className=\"text-white text-center  mb-5 fw-semibold fs-3\">\r\n                            Total Value\r\n                            <h3 className=\"text-white text-center  mb-5 fw-normal fs-4\">{totalPrice} MATIC</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"text-white text-center  mb-5 fw-semibold fs-5\">\r\n                Your NFTs\r\n            </div>\r\n            <div class=\"row row-cols-1 row-cols-md-4 g-4 mx-5 text-center\">\r\n                {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                })}\r\n            </div>\r\n            <div className=\"text-white text-center  mb-5 fw-normal fs-5\">\r\n                {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"}\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}