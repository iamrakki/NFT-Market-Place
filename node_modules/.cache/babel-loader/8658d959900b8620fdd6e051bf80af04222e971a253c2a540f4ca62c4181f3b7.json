{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rockr\\\\Desktop\\\\NFT-MARKETPLACE\\\\src\\\\components\\\\NFTpage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NFTPage(props) {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateDataFetched] = useState(false);\n  const [message, updateMessage] = useState(\"\");\n  const [own, setOwn] = useState(false);\n  const [newRoyaltyPercentage, setNewRoyaltyPercentage] = useState(0); // State for the new royalty percentage\n  const [tokenIdToSetRoyalty, setTokenIdToSetRoyalty] = useState(0); // State for the tokenId to set royalty\n\n  async function getNFTData(tokenId) {\n    let contract = props.contract;\n    const tokenURI = await contract.tokenURI(tokenId);\n    const listedToken = await contract.getListedTokenForId(tokenId);\n    const royaltyPercentage = listedToken.royaltyPercentage;\n    let meta = await axios(tokenURI, {\n      method: 'GET',\n      mode: 'cors'\n    });\n    meta = meta.data;\n    let image = getIPFSGatewayURL(meta.image);\n    let item = {\n      price: meta.price,\n      tokenId: tokenId,\n      seller: listedToken.seller,\n      owner: listedToken.owner,\n      image: image,\n      name: meta.name,\n      description: meta.description,\n      royaltyPercentage: royaltyPercentage\n    };\n    updateData(item);\n    if (props.account.toLowerCase() === data.seller.toLowerCase() || props.account.toLowerCase() === data.seller.toLowerCase()) {\n      setOwn(true);\n    }\n    updateDataFetched(true);\n  }\n  async function buyNFT(tokenId) {\n    try {\n      const ethers = require(\"ethers\");\n      let contract = props.contract;\n      const salePrice = ethers.utils.parseUnits(data.price, 'ether');\n      const royaltyPercentage = data.royaltyPercentage;\n      updateMessage(\"Buying the NFT... Please Wait (Upto 5 mins)\");\n      const royaltyAmount = salePrice.mul(royaltyPercentage).div(100);\n      const amountToSend = salePrice.sub(royaltyAmount);\n      if (salePrice.gt(ethers.constants.MaxUint256) || royaltyAmount.gt(ethers.constants.MaxUint256) || amountToSend.gt(ethers.constants.MaxUint256)) {\n        throw new Error(\"Value exceeds BigNumber bounds\");\n      }\n      const salePriceWei = salePrice.toString();\n      const amountToSendWei = amountToSend.toString();\n      const royaltyAmountWei = royaltyAmount.toString();\n      let transaction = await contract.executeSale(tokenId, {\n        value: amountToSendWei\n      });\n      await transaction.wait();\n      const originalCreator = data.owner;\n      const originalCreatorAddress = originalCreator.toLowerCase();\n      const signer = new ethers.Wallet(props.privateKey, props.provider);\n      const royaltyTransaction = await signer.sendTransaction({\n        to: originalCreatorAddress,\n        value: royaltyAmountWei\n      });\n      await royaltyTransaction.wait();\n      alert('You successfully bought the NFT!');\n      updateMessage(\"\");\n      if (props.account.toLowerCase() === data.seller.toLowerCase() || props.account.toLowerCase() === data.seller.toLowerCase()) {\n        setOwn(true);\n      } else {\n        setOwn(false);\n      }\n    } catch (e) {\n      alert(\"Error during NFT purchase: \" + e.message);\n    }\n  }\n\n  // Function to set the royalty percentage\n  async function setRoyalty() {\n    try {\n      if (isNaN(newRoyaltyPercentage) || newRoyaltyPercentage < 0 || newRoyaltyPercentage > 100) {\n        alert(\"Invalid royalty percentage. Please enter a value between 0 and 100.\");\n        return;\n      }\n      const signer = new ethers.Wallet(props.privateKey, props.provider);\n      let contract = new ethers.Contract(props.contract.address, props.contract.abi, signer);\n      const transaction = await contract.setRoyalty(tokenIdToSetRoyalty, newRoyaltyPercentage);\n      await transaction.wait();\n      alert(\"Royalty percentage updated successfully!\");\n      // Refresh the NFT data to display the updated royalty percentage\n      getNFTData(tokenIdToSetRoyalty);\n    } catch (error) {\n      alert(\"Error setting royalty: \" + error.message);\n    }\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  const getIPFSGatewayURL = ipfsURL => {\n    let urlArray = ipfsURL.split(\"/\");\n    let ipfsGateWayURL = `https://${urlArray[2]}.ipfs.dweb.link/${urlArray[3]}`;\n    return ipfsGateWayURL;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row row-cols-1 row-cols-md-1 g-4 mx-5 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card h-100 w-50 \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.image,\n              alt: `NFT Image for ${data.name}`,\n              class: \"card-img-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body text-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this), ' ', data.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), ' ', data.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), ' ', data.price + \" MATIC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Royalty Percentage:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this), ' ', data.royaltyPercentage + \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Owner:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this), ' ', data.owner]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-info font-weight-bold\",\n                  children: \"Seller:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this), ' ', data.seller]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: [own ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-weight-bold text-success\",\n                  children: \"You are the owner of this NFT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    size: \"lg\",\n                    onClick: () => buyNFT(tokenId),\n                    children: \"Buy this NFT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"newRoyaltyPercentage\",\n                      children: \"Set Royalty Percentage:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"form-control\",\n                      id: \"newRoyaltyPercentage\",\n                      value: newRoyaltyPercentage,\n                      onChange: e => setNewRoyaltyPercentage(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"tokenIdToSetRoyalty\",\n                      children: \"Token ID to Set Royalty:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"form-control\",\n                      id: \"tokenIdToSetRoyalty\",\n                      value: tokenIdToSetRoyalty,\n                      onChange: e => setTokenIdToSetRoyalty(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      size: \"lg\",\n                      onClick: () => setRoyalty(),\n                      children: \"Set Royalty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-weight-bold\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(NFTPage, \"twIZz/Z3JRSbjy5vZ4pzBA9xKBE=\", false, function () {\n  return [useParams];\n});\n_c = NFTPage;\nvar _c;\n$RefreshReg$(_c, \"NFTPage\");","map":{"version":3,"names":["useParams","axios","useState","Button","NFTPage","props","data","updateData","dataFetched","updateDataFetched","message","updateMessage","own","setOwn","newRoyaltyPercentage","setNewRoyaltyPercentage","tokenIdToSetRoyalty","setTokenIdToSetRoyalty","getNFTData","tokenId","contract","tokenURI","listedToken","getListedTokenForId","royaltyPercentage","meta","method","mode","image","getIPFSGatewayURL","item","price","seller","owner","name","description","account","toLowerCase","buyNFT","ethers","require","salePrice","utils","parseUnits","royaltyAmount","mul","div","amountToSend","sub","gt","constants","MaxUint256","Error","salePriceWei","toString","amountToSendWei","royaltyAmountWei","transaction","executeSale","value","wait","originalCreator","originalCreatorAddress","signer","Wallet","privateKey","provider","royaltyTransaction","sendTransaction","to","alert","e","setRoyalty","isNaN","Contract","address","abi","error","params","ipfsURL","urlArray","split","ipfsGateWayURL","target"],"sources":["C:/Users/rockr/Desktop/NFT-MARKETPLACE/src/components/NFTpage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function NFTPage(props) {\r\n\r\n    const [data, updateData] = useState([]);\r\n    const [dataFetched, updateDataFetched] = useState(false);\r\n    const [message, updateMessage] = useState(\"\");\r\n    const [own, setOwn] = useState(false);\r\n    const [newRoyaltyPercentage, setNewRoyaltyPercentage] = useState(0); // State for the new royalty percentage\r\n    const [tokenIdToSetRoyalty, setTokenIdToSetRoyalty] = useState(0); // State for the tokenId to set royalty\r\n\r\n    async function getNFTData(tokenId) {\r\n        let contract = props.contract;\r\n\r\n        const tokenURI = await contract.tokenURI(tokenId);\r\n        const listedToken = await contract.getListedTokenForId(tokenId);\r\n        const royaltyPercentage = listedToken.royaltyPercentage;\r\n\r\n        let meta = await axios(tokenURI, {\r\n            method: 'GET',\r\n            mode: 'cors'\r\n        });\r\n\r\n        meta = meta.data;\r\n        let image = getIPFSGatewayURL(meta.image);\r\n\r\n        let item = {\r\n            price: meta.price,\r\n            tokenId: tokenId,\r\n            seller: listedToken.seller,\r\n            owner: listedToken.owner,\r\n            image: image,\r\n            name: meta.name,\r\n            description: meta.description,\r\n            royaltyPercentage: royaltyPercentage,\r\n        };\r\n\r\n        updateData(item);\r\n        if (props.account.toLowerCase() === data.seller.toLowerCase() || props.account.toLowerCase() === data.seller.toLowerCase()) {\r\n            setOwn(true);\r\n        }\r\n\r\n        updateDataFetched(true);\r\n    }\r\n\r\n    async function buyNFT(tokenId) {\r\n        try {\r\n            const ethers = require(\"ethers\");\r\n            let contract = props.contract;\r\n\r\n            const salePrice = ethers.utils.parseUnits(data.price, 'ether');\r\n            const royaltyPercentage = data.royaltyPercentage;\r\n\r\n            updateMessage(\"Buying the NFT... Please Wait (Upto 5 mins)\");\r\n\r\n            const royaltyAmount = salePrice.mul(royaltyPercentage).div(100);\r\n            const amountToSend = salePrice.sub(royaltyAmount);\r\n\r\n            if (salePrice.gt(ethers.constants.MaxUint256) || royaltyAmount.gt(ethers.constants.MaxUint256) || amountToSend.gt(ethers.constants.MaxUint256)) {\r\n                throw new Error(\"Value exceeds BigNumber bounds\");\r\n            }\r\n\r\n            const salePriceWei = salePrice.toString();\r\n            const amountToSendWei = amountToSend.toString();\r\n            const royaltyAmountWei = royaltyAmount.toString();\r\n\r\n            let transaction = await contract.executeSale(tokenId, { value: amountToSendWei });\r\n            await transaction.wait();\r\n\r\n            const originalCreator = data.owner;\r\n            const originalCreatorAddress = originalCreator.toLowerCase();\r\n            const signer = new ethers.Wallet(props.privateKey, props.provider);\r\n\r\n            const royaltyTransaction = await signer.sendTransaction({\r\n                to: originalCreatorAddress,\r\n                value: royaltyAmountWei,\r\n            });\r\n\r\n            await royaltyTransaction.wait();\r\n\r\n            alert('You successfully bought the NFT!');\r\n            updateMessage(\"\");\r\n            if (props.account.toLowerCase() === data.seller.toLowerCase() || props.account.toLowerCase() === data.seller.toLowerCase()) {\r\n                setOwn(true);\r\n            } else {\r\n                setOwn(false);\r\n            }\r\n        } catch (e) {\r\n            alert(\"Error during NFT purchase: \" + e.message);\r\n        }\r\n    }\r\n\r\n    // Function to set the royalty percentage\r\n    async function setRoyalty() {\r\n        try {\r\n            if (isNaN(newRoyaltyPercentage) || newRoyaltyPercentage < 0 || newRoyaltyPercentage > 100) {\r\n                alert(\"Invalid royalty percentage. Please enter a value between 0 and 100.\");\r\n                return;\r\n            }\r\n\r\n            const signer = new ethers.Wallet(props.privateKey, props.provider);\r\n            let contract = new ethers.Contract(props.contract.address, props.contract.abi, signer);\r\n\r\n            const transaction = await contract.setRoyalty(tokenIdToSetRoyalty, newRoyaltyPercentage);\r\n            await transaction.wait();\r\n\r\n            alert(\"Royalty percentage updated successfully!\");\r\n            // Refresh the NFT data to display the updated royalty percentage\r\n            getNFTData(tokenIdToSetRoyalty);\r\n        } catch (error) {\r\n            alert(\"Error setting royalty: \" + error.message);\r\n        }\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    if (!dataFetched)\r\n        getNFTData(tokenId);\r\n\r\n    const getIPFSGatewayURL = (ipfsURL) => {\r\n        let urlArray = ipfsURL.split(\"/\");\r\n        let ipfsGateWayURL = `https://${urlArray[2]}.ipfs.dweb.link/${urlArray[3]}`;\r\n        return ipfsGateWayURL;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <center>\r\n                <div class=\"row row-cols-1 row-cols-md-1 g-4 mx-5 \">\r\n                    <div class=\"col\">\r\n                        <div class=\"card h-100 w-50 \">\r\n                            <img src={data.image} alt={`NFT Image for ${data.name}`} class=\"card-img-top\" />\r\n\r\n                            <div class=\"card-body text-left\">\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Name:</span>{' '}{data.name}\r\n                                </div>\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Description:</span>{' '}{data.description}\r\n                                </div>\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Price:</span>{' '}{data.price + \" MATIC\"}\r\n                                </div>\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Royalty Percentage:</span>{' '}{data.royaltyPercentage + \"%\"}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Owner:</span>{' '}{data.owner}\r\n                                </div>\r\n                                <div>\r\n                                    <span className='text-info font-weight-bold'>Seller:</span>{' '}{data.seller}\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"d-grid gap-2\">\r\n                                    {own ?\r\n                                        <div className=\"font-weight-bold text-success\">You are the owner of this NFT</div>\r\n                                        : <>\r\n                                            <Button variant=\"primary\" size=\"lg\" onClick={() => buyNFT(tokenId)}>Buy this NFT</Button>\r\n                                            <br />\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"newRoyaltyPercentage\">Set Royalty Percentage:</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"newRoyaltyPercentage\"\r\n                                                    value={newRoyaltyPercentage}\r\n                                                    onChange={(e) => setNewRoyaltyPercentage(e.target.value)}\r\n                                                />\r\n                                                <label htmlFor=\"tokenIdToSetRoyalty\">Token ID to Set Royalty:</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    className=\"form-control\"\r\n                                                    id=\"tokenIdToSetRoyalty\"\r\n                                                    value={tokenIdToSetRoyalty}\r\n                                                    onChange={(e) => setTokenIdToSetRoyalty(e.target.value)}\r\n                                                />\r\n                                                <Button variant=\"primary\" size=\"lg\" onClick={() => setRoyalty()}>\r\n                                                    Set Royalty\r\n                                                </Button>\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                    <div className=\"font-weight-bold\">{message}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </center>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAAA;AAE5C,eAAe,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAEnC,MAAM,CAACC,IAAI,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACM,WAAW,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACxD,MAAM,CAACQ,OAAO,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACY,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnE,eAAegB,UAAU,CAACC,OAAO,EAAE;IAC/B,IAAIC,QAAQ,GAAGf,KAAK,CAACe,QAAQ;IAE7B,MAAMC,QAAQ,GAAG,MAAMD,QAAQ,CAACC,QAAQ,CAACF,OAAO,CAAC;IACjD,MAAMG,WAAW,GAAG,MAAMF,QAAQ,CAACG,mBAAmB,CAACJ,OAAO,CAAC;IAC/D,MAAMK,iBAAiB,GAAGF,WAAW,CAACE,iBAAiB;IAEvD,IAAIC,IAAI,GAAG,MAAMxB,KAAK,CAACoB,QAAQ,EAAE;MAC7BK,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE;IACV,CAAC,CAAC;IAEFF,IAAI,GAAGA,IAAI,CAACnB,IAAI;IAChB,IAAIsB,KAAK,GAAGC,iBAAiB,CAACJ,IAAI,CAACG,KAAK,CAAC;IAEzC,IAAIE,IAAI,GAAG;MACPC,KAAK,EAAEN,IAAI,CAACM,KAAK;MACjBZ,OAAO,EAAEA,OAAO;MAChBa,MAAM,EAAEV,WAAW,CAACU,MAAM;MAC1BC,KAAK,EAAEX,WAAW,CAACW,KAAK;MACxBL,KAAK,EAAEA,KAAK;MACZM,IAAI,EAAET,IAAI,CAACS,IAAI;MACfC,WAAW,EAAEV,IAAI,CAACU,WAAW;MAC7BX,iBAAiB,EAAEA;IACvB,CAAC;IAEDjB,UAAU,CAACuB,IAAI,CAAC;IAChB,IAAIzB,KAAK,CAAC+B,OAAO,CAACC,WAAW,EAAE,KAAK/B,IAAI,CAAC0B,MAAM,CAACK,WAAW,EAAE,IAAIhC,KAAK,CAAC+B,OAAO,CAACC,WAAW,EAAE,KAAK/B,IAAI,CAAC0B,MAAM,CAACK,WAAW,EAAE,EAAE;MACxHxB,MAAM,CAAC,IAAI,CAAC;IAChB;IAEAJ,iBAAiB,CAAC,IAAI,CAAC;EAC3B;EAEA,eAAe6B,MAAM,CAACnB,OAAO,EAAE;IAC3B,IAAI;MACA,MAAMoB,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;MAChC,IAAIpB,QAAQ,GAAGf,KAAK,CAACe,QAAQ;MAE7B,MAAMqB,SAAS,GAAGF,MAAM,CAACG,KAAK,CAACC,UAAU,CAACrC,IAAI,CAACyB,KAAK,EAAE,OAAO,CAAC;MAC9D,MAAMP,iBAAiB,GAAGlB,IAAI,CAACkB,iBAAiB;MAEhDb,aAAa,CAAC,6CAA6C,CAAC;MAE5D,MAAMiC,aAAa,GAAGH,SAAS,CAACI,GAAG,CAACrB,iBAAiB,CAAC,CAACsB,GAAG,CAAC,GAAG,CAAC;MAC/D,MAAMC,YAAY,GAAGN,SAAS,CAACO,GAAG,CAACJ,aAAa,CAAC;MAEjD,IAAIH,SAAS,CAACQ,EAAE,CAACV,MAAM,CAACW,SAAS,CAACC,UAAU,CAAC,IAAIP,aAAa,CAACK,EAAE,CAACV,MAAM,CAACW,SAAS,CAACC,UAAU,CAAC,IAAIJ,YAAY,CAACE,EAAE,CAACV,MAAM,CAACW,SAAS,CAACC,UAAU,CAAC,EAAE;QAC5I,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MAEA,MAAMC,YAAY,GAAGZ,SAAS,CAACa,QAAQ,EAAE;MACzC,MAAMC,eAAe,GAAGR,YAAY,CAACO,QAAQ,EAAE;MAC/C,MAAME,gBAAgB,GAAGZ,aAAa,CAACU,QAAQ,EAAE;MAEjD,IAAIG,WAAW,GAAG,MAAMrC,QAAQ,CAACsC,WAAW,CAACvC,OAAO,EAAE;QAAEwC,KAAK,EAAEJ;MAAgB,CAAC,CAAC;MACjF,MAAME,WAAW,CAACG,IAAI,EAAE;MAExB,MAAMC,eAAe,GAAGvD,IAAI,CAAC2B,KAAK;MAClC,MAAM6B,sBAAsB,GAAGD,eAAe,CAACxB,WAAW,EAAE;MAC5D,MAAM0B,MAAM,GAAG,IAAIxB,MAAM,CAACyB,MAAM,CAAC3D,KAAK,CAAC4D,UAAU,EAAE5D,KAAK,CAAC6D,QAAQ,CAAC;MAElE,MAAMC,kBAAkB,GAAG,MAAMJ,MAAM,CAACK,eAAe,CAAC;QACpDC,EAAE,EAAEP,sBAAsB;QAC1BH,KAAK,EAAEH;MACX,CAAC,CAAC;MAEF,MAAMW,kBAAkB,CAACP,IAAI,EAAE;MAE/BU,KAAK,CAAC,kCAAkC,CAAC;MACzC3D,aAAa,CAAC,EAAE,CAAC;MACjB,IAAIN,KAAK,CAAC+B,OAAO,CAACC,WAAW,EAAE,KAAK/B,IAAI,CAAC0B,MAAM,CAACK,WAAW,EAAE,IAAIhC,KAAK,CAAC+B,OAAO,CAACC,WAAW,EAAE,KAAK/B,IAAI,CAAC0B,MAAM,CAACK,WAAW,EAAE,EAAE;QACxHxB,MAAM,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACHA,MAAM,CAAC,KAAK,CAAC;MACjB;IACJ,CAAC,CAAC,OAAO0D,CAAC,EAAE;MACRD,KAAK,CAAC,6BAA6B,GAAGC,CAAC,CAAC7D,OAAO,CAAC;IACpD;EACJ;;EAEA;EACA,eAAe8D,UAAU,GAAG;IACxB,IAAI;MACA,IAAIC,KAAK,CAAC3D,oBAAoB,CAAC,IAAIA,oBAAoB,GAAG,CAAC,IAAIA,oBAAoB,GAAG,GAAG,EAAE;QACvFwD,KAAK,CAAC,qEAAqE,CAAC;QAC5E;MACJ;MAEA,MAAMP,MAAM,GAAG,IAAIxB,MAAM,CAACyB,MAAM,CAAC3D,KAAK,CAAC4D,UAAU,EAAE5D,KAAK,CAAC6D,QAAQ,CAAC;MAClE,IAAI9C,QAAQ,GAAG,IAAImB,MAAM,CAACmC,QAAQ,CAACrE,KAAK,CAACe,QAAQ,CAACuD,OAAO,EAAEtE,KAAK,CAACe,QAAQ,CAACwD,GAAG,EAAEb,MAAM,CAAC;MAEtF,MAAMN,WAAW,GAAG,MAAMrC,QAAQ,CAACoD,UAAU,CAACxD,mBAAmB,EAAEF,oBAAoB,CAAC;MACxF,MAAM2C,WAAW,CAACG,IAAI,EAAE;MAExBU,KAAK,CAAC,0CAA0C,CAAC;MACjD;MACApD,UAAU,CAACF,mBAAmB,CAAC;IACnC,CAAC,CAAC,OAAO6D,KAAK,EAAE;MACZP,KAAK,CAAC,yBAAyB,GAAGO,KAAK,CAACnE,OAAO,CAAC;IACpD;EACJ;EAEA,MAAMoE,MAAM,GAAG9E,SAAS,EAAE;EAC1B,MAAMmB,OAAO,GAAG2D,MAAM,CAAC3D,OAAO;EAC9B,IAAI,CAACX,WAAW,EACZU,UAAU,CAACC,OAAO,CAAC;EAEvB,MAAMU,iBAAiB,GAAIkD,OAAO,IAAK;IACnC,IAAIC,QAAQ,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;IACjC,IAAIC,cAAc,GAAI,WAAUF,QAAQ,CAAC,CAAC,CAAE,mBAAkBA,QAAQ,CAAC,CAAC,CAAE,EAAC;IAC3E,OAAOE,cAAc;EACzB,CAAC;EAED,oBACI;IAAA,uBACI;MAAA,uBACI;QAAK,KAAK,EAAC,wCAAwC;QAAA,uBAC/C;UAAK,KAAK,EAAC,KAAK;UAAA,uBACZ;YAAK,KAAK,EAAC,kBAAkB;YAAA,wBACzB;cAAK,GAAG,EAAE5E,IAAI,CAACsB,KAAM;cAAC,GAAG,EAAG,iBAAgBtB,IAAI,CAAC4B,IAAK,EAAE;cAAC,KAAK,EAAC;YAAc;cAAA;cAAA;cAAA;YAAA,QAAG,eAEhF;cAAK,KAAK,EAAC,qBAAqB;cAAA,wBAC5B;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAE5B,IAAI,CAAC4B,IAAI;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACtE,eACN;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAY;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAE5B,IAAI,CAAC6B,WAAW;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACpF,eACN;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAE7B,IAAI,CAACyB,KAAK,GAAG,QAAQ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACnF,eACN;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAmB;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAEzB,IAAI,CAACkB,iBAAiB,GAAG,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACvG,eAEN;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAElB,IAAI,CAAC2B,KAAK;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACxE,eACN;gBAAA,wBACI;kBAAM,SAAS,EAAC,4BAA4B;kBAAA,UAAC;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAO,EAAC,GAAG,EAAE3B,IAAI,CAAC0B,MAAM;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC1E,eACN;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACN;gBAAK,SAAS,EAAC,cAAc;gBAAA,WACxBpB,GAAG,gBACA;kBAAK,SAAS,EAAC,+BAA+B;kBAAA,UAAC;gBAA6B;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,gBAChF;kBAAA,wBACE,QAAC,MAAM;oBAAC,OAAO,EAAC,SAAS;oBAAC,IAAI,EAAC,IAAI;oBAAC,OAAO,EAAE,MAAM0B,MAAM,CAACnB,OAAO,CAAE;oBAAA,UAAC;kBAAY;oBAAA;oBAAA;oBAAA;kBAAA,QAAS,eACzF;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eACN;oBAAK,SAAS,EAAC,YAAY;oBAAA,wBACvB;sBAAO,OAAO,EAAC,sBAAsB;sBAAA,UAAC;oBAAuB;sBAAA;sBAAA;sBAAA;oBAAA,QAAQ,eACrE;sBACI,IAAI,EAAC,QAAQ;sBACb,SAAS,EAAC,cAAc;sBACxB,EAAE,EAAC,sBAAsB;sBACzB,KAAK,EAAEL,oBAAqB;sBAC5B,QAAQ,EAAGyD,CAAC,IAAKxD,uBAAuB,CAACwD,CAAC,CAACY,MAAM,CAACxB,KAAK;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA,QAC3D,eACF;sBAAO,OAAO,EAAC,qBAAqB;sBAAA,UAAC;oBAAwB;sBAAA;sBAAA;sBAAA;oBAAA,QAAQ,eACrE;sBACI,IAAI,EAAC,QAAQ;sBACb,SAAS,EAAC,cAAc;sBACxB,EAAE,EAAC,qBAAqB;sBACxB,KAAK,EAAE3C,mBAAoB;sBAC3B,QAAQ,EAAGuD,CAAC,IAAKtD,sBAAsB,CAACsD,CAAC,CAACY,MAAM,CAACxB,KAAK;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA,QAC1D,eACF,QAAC,MAAM;sBAAC,OAAO,EAAC,SAAS;sBAAC,IAAI,EAAC,IAAI;sBAAC,OAAO,EAAE,MAAMa,UAAU,EAAG;sBAAA,UAAC;oBAEjE;sBAAA;sBAAA;sBAAA;oBAAA,QAAS;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QACP;gBAAA,gBACP,eAEP;kBAAK,SAAS,EAAC,kBAAkB;kBAAA,UAAE9D;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAO;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAC/C;YAAA;cAAA;cAAA;cAAA;YAAA,QACJ;UAAA;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACD,iBACV;AAEX;AAAC,GA9LuBN,OAAO;EAAA,QAgHZJ,SAAS;AAAA;AAAA,KAhHJI,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}